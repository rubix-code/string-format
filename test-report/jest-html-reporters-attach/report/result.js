window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":4,"numPassedTests":90,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":4,"numTotalTests":90,"startTime":1692455125375,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1692455130402,"runtime":4471,"slow":false,"start":1692455125931},"testFilePath":"Y:\\Projects\\Rubixcode\\string-format\\test\\index.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["global string.format"],"duration":11,"failureMessages":[],"fullName":"global string.format String.prototype.format exists","status":"passed","title":"String.prototype.format exists"},{"ancestorTitles":["global string.format"],"duration":2,"failureMessages":[],"fullName":"global string.format .format does not throw","status":"passed","title":".format does not throw"},{"ancestorTitles":["global string.format"],"duration":2,"failureMessages":[],"fullName":"global string.format .format supports C-Style","status":"passed","title":".format supports C-Style"},{"ancestorTitles":["global string.format"],"duration":2,"failureMessages":[],"fullName":"global string.format .format supports Python-Style","status":"passed","title":".format supports Python-Style"},{"ancestorTitles":["global string.format"],"duration":1,"failureMessages":[],"fullName":"global string.format .format supports json transformer","status":"passed","title":".format supports json transformer"},{"ancestorTitles":["global string.format"],"duration":0,"failureMessages":[],"fullName":"global string.format .format support for multiple formatters is disabled by default","status":"passed","title":".format support for multiple formatters is disabled by default"},{"ancestorTitles":["global string.format"],"duration":2,"failureMessages":[],"fullName":"global string.format enable multiple formatter","status":"passed","title":"enable multiple formatter"}]},{"numFailingTests":0,"numPassingTests":43,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1692455130536,"runtime":4633,"slow":false,"start":1692455125903},"testFilePath":"Y:\\Projects\\Rubixcode\\string-format\\test\\formatters\\CStyleFormatter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["formatter/CStyleFormatter"],"duration":9,"failureMessages":[],"fullName":"formatter/CStyleFormatter name is CStyleFormatter","status":"passed","title":"name is CStyleFormatter"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic isFormatParserSupported is true","status":"passed","title":"isFormatParserSupported is true"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":2,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic Adding Format parser does not throw","status":"passed","title":"Adding Format parser does not throw"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":114,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic Adding Format parser throws if parser already exists","status":"passed","title":"Adding Format parser throws if parser already exists"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic Removing a parser must not throw","status":"passed","title":"Removing a parser must not throw"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":0,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic Removing a parser must throw if parser does not exist","status":"passed","title":"Removing a parser must throw if parser does not exist"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":0,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic isTransformersSupported must be false","status":"passed","title":"isTransformersSupported must be false"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic addTransformer must throw","status":"passed","title":"addTransformer must throw"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":3,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic removeTransformer must throw","status":"passed","title":"removeTransformer must throw"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic format must return false and the input string if not formatted","status":"passed","title":"format must return false and the input string if not formatted"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":2,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic format must return true and the formatted string if formatted","status":"passed","title":"format must return true and the formatted string if formatted"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":7,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic custom format parser is called","status":"passed","title":"custom format parser is called"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic hasFormatParser() works","status":"passed","title":"hasFormatParser() works"},{"ancestorTitles":["formatter/CStyleFormatter basic"],"duration":2,"failureMessages":[],"fullName":"formatter/CStyleFormatter basic hasTransformer() throws as it is not supported","status":"passed","title":"hasTransformer() throws as it is not supported"},{"ancestorTitles":["formatter/CStyleFormatter String.format"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format Unmatched pattern is not replaced","status":"passed","title":"Unmatched pattern is not replaced"},{"ancestorTitles":["formatter/CStyleFormatter String.format with int-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with int-parser String Replace","status":"passed","title":"String Replace"},{"ancestorTitles":["formatter/CStyleFormatter String.format with int-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with int-parser Left Padding with zero","status":"passed","title":"Left Padding with zero"},{"ancestorTitles":["formatter/CStyleFormatter String.format with int-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with int-parser Left Padding with space","status":"passed","title":"Left Padding with space"},{"ancestorTitles":["formatter/CStyleFormatter String.format with int-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with int-parser Right Padding with space","status":"passed","title":"Right Padding with space"},{"ancestorTitles":["formatter/CStyleFormatter String.format with int-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with int-parser Unmatched padding pattern is not replaced","status":"passed","title":"Unmatched padding pattern is not replaced"},{"ancestorTitles":["formatter/CStyleFormatter String.format with int-parser"],"duration":9,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with int-parser Type mismatch throws TypeError","status":"passed","title":"Type mismatch throws TypeError"},{"ancestorTitles":["formatter/CStyleFormatter String.format with string-parser"],"duration":12,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with string-parser Invalid format input throws TypeError","status":"passed","title":"Invalid format input throws TypeError"},{"ancestorTitles":["formatter/CStyleFormatter String.format with string-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with string-parser String Replace","status":"passed","title":"String Replace"},{"ancestorTitles":["formatter/CStyleFormatter String.format with string-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with string-parser String Padding","status":"passed","title":"String Padding"},{"ancestorTitles":["formatter/CStyleFormatter String.format with string-parser"],"duration":0,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with string-parser String Truncation","status":"passed","title":"String Truncation"},{"ancestorTitles":["formatter/CStyleFormatter String.format with string-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with string-parser String truncation and padding","status":"passed","title":"String truncation and padding"},{"ancestorTitles":["formatter/CStyleFormatter String.format with string-parser"],"duration":0,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with string-parser Boolean to string","status":"passed","title":"Boolean to string"},{"ancestorTitles":["formatter/CStyleFormatter String.format with string-parser"],"duration":3,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with string-parser Special Characters","status":"passed","title":"Special Characters"},{"ancestorTitles":["formatter/CStyleFormatter String.format with octet-parser"],"duration":2,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with octet-parser Invalid input throws TypeError","status":"passed","title":"Invalid input throws TypeError"},{"ancestorTitles":["formatter/CStyleFormatter String.format with octet-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with octet-parser Replace","status":"passed","title":"Replace"},{"ancestorTitles":["formatter/CStyleFormatter String.format with binary-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with binary-parser Invalid input throws TypeError","status":"passed","title":"Invalid input throws TypeError"},{"ancestorTitles":["formatter/CStyleFormatter String.format with binary-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with binary-parser Replace","status":"passed","title":"Replace"},{"ancestorTitles":["formatter/CStyleFormatter String.format with hex-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with hex-parser Invalid input throws TypeError","status":"passed","title":"Invalid input throws TypeError"},{"ancestorTitles":["formatter/CStyleFormatter String.format with hex-parser"],"duration":0,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with hex-parser Replace","status":"passed","title":"Replace"},{"ancestorTitles":["formatter/CStyleFormatter String.format with char-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with char-parser Invalid input throws TypeError","status":"passed","title":"Invalid input throws TypeError"},{"ancestorTitles":["formatter/CStyleFormatter String.format with char-parser"],"duration":0,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with char-parser Replace","status":"passed","title":"Replace"},{"ancestorTitles":["formatter/CStyleFormatter String.format with float-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with float-parser Invalid input throws TypeError","status":"passed","title":"Invalid input throws TypeError"},{"ancestorTitles":["formatter/CStyleFormatter String.format with float-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with float-parser Replace","status":"passed","title":"Replace"},{"ancestorTitles":["formatter/CStyleFormatter String.format with float-parser"],"duration":0,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with float-parser Padding","status":"passed","title":"Padding"},{"ancestorTitles":["formatter/CStyleFormatter String.format with float-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with float-parser truncate","status":"passed","title":"truncate"},{"ancestorTitles":["formatter/CStyleFormatter String.format with exponent-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with exponent-parser Invalid input throws TypeError","status":"passed","title":"Invalid input throws TypeError"},{"ancestorTitles":["formatter/CStyleFormatter String.format with exponent-parser"],"duration":1,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with exponent-parser Incorrect input throws RangeError","status":"passed","title":"Incorrect input throws RangeError"},{"ancestorTitles":["formatter/CStyleFormatter String.format with exponent-parser"],"duration":4,"failureMessages":[],"fullName":"formatter/CStyleFormatter String.format with exponent-parser Replace","status":"passed","title":"Replace"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1692455130555,"runtime":4587,"slow":false,"start":1692455125968},"testFilePath":"Y:\\Projects\\Rubixcode\\string-format\\test\\StringFormat.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StringFormat"],"duration":11,"failureMessages":[],"fullName":"StringFormat constructor","status":"passed","title":"constructor"},{"ancestorTitles":["StringFormat"],"duration":0,"failureMessages":[],"fullName":"StringFormat multi formatter mode is disabled by default","status":"passed","title":"multi formatter mode is disabled by default"},{"ancestorTitles":["StringFormat"],"duration":0,"failureMessages":[],"fullName":"StringFormat enableMultipleFormatterMode() works","status":"passed","title":"enableMultipleFormatterMode() works"},{"ancestorTitles":["StringFormat"],"duration":1,"failureMessages":[],"fullName":"StringFormat disableMultipleFormatterMode() works","status":"passed","title":"disableMultipleFormatterMode() works"},{"ancestorTitles":["StringFormat"],"duration":1,"failureMessages":[],"fullName":"StringFormat addFormatter() works","status":"passed","title":"addFormatter() works"},{"ancestorTitles":["StringFormat"],"duration":96,"failureMessages":[],"fullName":"StringFormat addFormatter() throws if formatter is already added","status":"passed","title":"addFormatter() throws if formatter is already added"},{"ancestorTitles":["StringFormat"],"duration":0,"failureMessages":[],"fullName":"StringFormat hasFormatter() works","status":"passed","title":"hasFormatter() works"},{"ancestorTitles":["StringFormat"],"duration":1,"failureMessages":[],"fullName":"StringFormat removeFormatter() works","status":"passed","title":"removeFormatter() works"},{"ancestorTitles":["StringFormat"],"duration":1,"failureMessages":[],"fullName":"StringFormat removeFormatter() throws if formatter is not added","status":"passed","title":"removeFormatter() throws if formatter is not added"},{"ancestorTitles":["StringFormat"],"duration":3,"failureMessages":[],"fullName":"StringFormat extend() works","status":"passed","title":"extend() works"},{"ancestorTitles":["StringFormat"],"duration":4,"failureMessages":[],"fullName":"StringFormat single formatter mode stops after 1st formatter","status":"passed","title":"single formatter mode stops after 1st formatter"},{"ancestorTitles":["StringFormat"],"duration":1,"failureMessages":[],"fullName":"StringFormat single formatter mode runs till a formatter is found","status":"passed","title":"single formatter mode runs till a formatter is found"},{"ancestorTitles":["StringFormat"],"duration":1,"failureMessages":[],"fullName":"StringFormat multiple formatter mode runs till a formatter is found","status":"passed","title":"multiple formatter mode runs till a formatter is found"},{"ancestorTitles":["StringFormat"],"duration":1,"failureMessages":[],"fullName":"StringFormat multiple formatter mode runs for all formatters","status":"passed","title":"multiple formatter mode runs for all formatters"}]},{"numFailingTests":0,"numPassingTests":26,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1692455130608,"runtime":4672,"slow":false,"start":1692455125936},"testFilePath":"Y:\\Projects\\Rubixcode\\string-format\\test\\formatters\\PyStyleFormatter.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["formatter/PyStyleFormatter"],"duration":12,"failureMessages":[],"fullName":"formatter/PyStyleFormatter name is PyStyleFormatter","status":"passed","title":"name is PyStyleFormatter"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic isFormatParserSupported is false","status":"passed","title":"isFormatParserSupported is false"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":83,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic addFormatParser throws error","status":"passed","title":"addFormatParser throws error"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic hasFormatParser throws error","status":"passed","title":"hasFormatParser throws error"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic removeFormatParser throws error","status":"passed","title":"removeFormatParser throws error"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic isTransformersSupported must be true","status":"passed","title":"isTransformersSupported must be true"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic addTransformer adds a transformer","status":"passed","title":"addTransformer adds a transformer"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic addTransformer throws when same name is used","status":"passed","title":"addTransformer throws when same name is used"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic removeTransformer deletes the transformer","status":"passed","title":"removeTransformer deletes the transformer"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic removeTransformer throws if the transformer does not exist","status":"passed","title":"removeTransformer throws if the transformer does not exist"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic format must return false and the input string if not formatted","status":"passed","title":"format must return false and the input string if not formatted"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":2,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic format must return true and the formatted string if formatted","status":"passed","title":"format must return true and the formatted string if formatted"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic custom transformer is called","status":"passed","title":"custom transformer is called"},{"ancestorTitles":["formatter/PyStyleFormatter basic"],"duration":2,"failureMessages":[],"fullName":"formatter/PyStyleFormatter basic throws error when transformer is not found","status":"passed","title":"throws error when transformer is not found"},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":18,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format throws when indexing switches from implicit to explicit","status":"passed","title":"throws when indexing switches from implicit to explicit"},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":2,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format throws when indexing switches from explicit to implicit","status":"passed","title":"throws when indexing switches from explicit to implicit"},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format interpolates positional arguments","status":"passed","title":"interpolates positional arguments"},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":2,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format strips unmatched placeholders","status":"passed","title":"strips unmatched placeholders"},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":0,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format allows indexes to be omitted if they are entirely sequential","status":"passed","title":"allows indexes to be omitted if they are entirely sequential"},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format replaces all occurrences of a placeholder","status":"passed","title":"replaces all occurrences of a placeholder"},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":1,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format uses default string representations","status":"passed","title":"uses default string representations"},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":0,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format treats \"{{\" and \"}}\" as \"{\" and \"}\"","status":"passed","title":"treats \"{{\" and \"}}\" as \"{\" and \"}\""},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":0,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format supports property access via dot notation","status":"passed","title":"supports property access via dot notation"},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":3,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format defaults to \"\" if lookup fails","status":"passed","title":"defaults to \"\" if lookup fails"},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":8,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format invokes methods","status":"passed","title":"invokes methods"},{"ancestorTitles":["formatter/PyStyleFormatter format"],"duration":5,"failureMessages":[],"fullName":"formatter/PyStyleFormatter format passes applicable tests from Python's test suite","status":"passed","title":"passes applicable tests from Python's test suite"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":["src/**/*.{ts,js}"],"coverageDirectory":"Y:\\Projects\\Rubixcode\\string-format\\coverage","coverageProvider":"babel","coverageReporters":["json","lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":true,"projects":[],"reporters":[["default",{}],["Y:\\Projects\\Rubixcode\\string-format\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./test-report","filename":"report.html","expand":true,"darkTheme":true}]],"rootDir":"Y:\\Projects\\Rubixcode\\string-format","runTestsByPath":false,"seed":1591207604,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"Y:\\Projects\\Rubixcode\\string-format\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"..\\coverage\\lcov-report\\index.html"},"endTime":1692455130706,"_reporterOptions":{"publicPath":"./test-report","filename":"report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":true,"includeConsoleLog":false},"logInfoMapping":{},"attachInfos":{}})